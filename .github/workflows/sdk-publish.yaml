name: Speakeasy SDK Publish Workflow

on:
  workflow_call:
    inputs:
      create_release:
        description: "Create a Github release"
        default: "true"
        required: false
        type: string
      publish_python:
        description: "Publish the Python SDK to PyPi if using 'direct' mode or prepare a release if using 'pr' mode"
        default: "false"
        required: false
        type: string
      publish_typescript:
        description: "Publish the Typescript SDK to NPM if using 'direct' mode or prepare a release if using 'pr' mode"
        default: "false"
        required: false
        type: string
      publish_java:
        description: "Publish the Java SDK to the OSSRH URL configured in gen.yml if using 'direct' mode or prepare a release if using 'pr' mode"
        default: "false"
        required: false
        type: string
      publish_php:
        description: "Publish the PHP SDK for Composer if using 'direct' mode or prepare a release if using 'pr' mode"
        default: "false"
        required: false
        type: string
    secrets:
      github_access_token:
        description: A GitHub access token with write access to the repo
        required: true
      pypi_token:
        description: A PyPi access token for publishing the package to PyPi, include the `pypi-` prefix
        required: false
      npm_token:
        description: An NPM access token for publishing the package to NPM, include the `npm_` prefix
        required: false
      packagist_username:
        description: A Packagist username for publishing the package to Packagist
        required: false
      packagist_token:
        description: A Packagist API token for publishing the package to Packagist
        required: false
      speakeasy_api_key:
        description: The API key to use to authenticate the Speakeasy CLI
        required: true
      ossrh_username:
        description: A username for publishing the Java package to the OSSRH URL provided in gen.yml
        required: false
      ossrh_password:
        description: The corresponding password for publishing the Java package to the OSSRH URL provided in gen.yml
        required: false

jobs:
  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    outputs:
      python_regenerated: ${{ steps.release.outputs.python_regenerated }}
      python_directory: ${{ steps.release.outputs.python_directory }}
      typescript_regenerated: ${{ steps.release.outputs.typescript_regenerated }}
      typescript_directory: ${{ steps.release.outputs.typescript_directory }}
      go_regenerated: ${{ steps.release.outputs.go_regenerated }}
      go_directory: ${{ steps.release.outputs.go_directory }}
      java_regenerated: ${{ steps.release.outputs.java_regenerated }}
      java_directory: ${{ steps.release.outputs.java_directory }}
      php_regenerated: ${{ steps.release.outputs.php_regenerated }}
      php_directory: ${{ steps.release.outputs.php_directory }}
    steps:
      - id: release
        uses: speakeasy-api/sdk-generation-action@v14.2
        with:
          github_access_token: ${{ secrets.github_access_token }}
          create_release: ${{ inputs.create_release }}
          publish_python: ${{ inputs.publish_python }}
          publish_typescript: ${{ inputs.publish_typescript }}
          publish_java: ${{ inputs.publish_java }}
          publish_php: ${{ inputs.publish_php }}
          action: "release"
          speakeasy_api_key: ${{ secrets.speakeasy_api_key }}
  publish-pypi:
    if: ${{ needs.release.outputs.python_regenerated == 'true' && inputs.publish_python == 'true' }}
    name: Publish Python SDK
    runs-on: ubuntu-latest
    needs: release
    defaults:
      run:
        working-directory: ${{ needs.release.outputs.python_directory }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
  publish-npm:
    if: ${{ needs.release.outputs.typescript_regenerated == 'true' && inputs.publish_typescript == 'true' }}
    name: Publish Typescript SDK
    runs-on: ubuntu-latest
    needs: release
    defaults:
      run:
        working-directory: ${{ needs.release.outputs.typescript_directory }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: npm install
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
        run: npm publish --access public
  publish-java:
    if: ${{ needs.release.outputs.java_regenerated == 'true' && inputs.publish_java == 'true' }}
    name: Publish Java SDK
    runs-on: ubuntu-latest
    needs: release
    defaults:
      run:
        working-directory: ${{ needs.release.outputs.java_directory }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3.10.0
        with:
          java-version: "18"
          distribution: "adopt"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Publish package
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: publish
        env:
          MAVEN_USERNAME: ${{ secrets.ossrh_username }}
          MAVEN_PASSWORD: ${{ secrets.ossrh_password }}
  publish-packagist:
    if: ${{ needs.release.outputs.php_regenerated == 'true' && inputs.publish_php == 'true' }}
    name: Publish PHP SDK
    runs-on: ubuntu-latest
    needs: release
    defaults:
      run:
        working-directory: ${{ needs.release.outputs.php_directory }}
    steps:
      - name: Publish
        uses: wei/curl@v1.1.1
        with:
          args: -XPOST -H'content-type:application/json' 'https://packagist.org/api/update-package?username=${{ secrets.packagist_username }}&apiToken=${{ secrets.packagist_token }}' -d'{\"repository\":{\"url\":\"${{ github.server_url }}/${{ github.repository }}\"}}'
