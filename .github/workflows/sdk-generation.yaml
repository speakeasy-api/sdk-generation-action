name: Speakeasy SDK Generation Workflow

on:
  workflow_call:
    inputs:
      speakeasy_version:
        description: The version of the Speakeasy CLI to use or "latest"
        default: latest
        required: false
        type: string
      openapi_doc_location:
        description: The location of the OpenAPI document to use, either a relative path within the repo or a URL to a publicly hosted document
        required: true
        type: string
      languages:
        description: |-
          A yaml string containing a list of languages to generate SDKs for example:
          languages: |
            - go: ./go-sdk # specifying a output directory
            - python # using default output of ./python-client-sdk
            - typescript # using default output of ./typescript-client-sdk
            - java # using default output of ./java-client-sdk

          If multiple languages are present we will treat this repo as a mono repo, if a single language is present as a single language repo
        required: true
        type: string
      create_release:
        description: "Create a Github release on generation"
        default: "true"
        required: false
        type: string
      publish_python:
        description: "Publish the Python SDK to PyPi"
        default: "false"
        required: false
        type: string
      publish_typescript:
        description: "Publish the Typescript SDK to NPM"
        default: "false"
        required: false
        type: string
      debug:
        description: "Enable debug logging"
        default: "false"
        type: string
    secrets:
      github_access_token:
        description: A GitHub access token with write access to the repo
        required: true
      pypi_token:
        description: A PyPi access token for publishing the package to PyPi, include the `pypi-` prefix
        required: false
      npm_token:
        description: An NPM access token for publishing the package to NPM, include the `npm_` prefix
        required: false

jobs:
  generate:
    name: Generate SDK
    runs-on: ubuntu-latest
    outputs:
      python_regenerated: ${{ steps.generate.outputs.python_regenerated }}
      python_directory: ${{ steps.generate.outputs.python_directory }}
      typescript_regenerated: ${{ steps.generate.outputs.typescript_regenerated }}
      typescript_directory: ${{ steps.generate.outputs.typescript_directory }}
      go_regenerated: ${{ steps.generate.outputs.go_regenerated }}
      go_directory: ${{ steps.generate.outputs.go_directory }}
      java_regenerated: ${{ steps.generate.outputs.java_regenerated }}
      java_directory: ${{ steps.generate.outputs.java_directory }}
      commit_hash: ${{ steps.generate.outputs.commit_hash }}
    steps:
      - id: generate
        uses: speakeasy-api/sdk-generation-action@v5.2
        with:
          speakeasy_version: ${{ inputs.speakeasy_version }}
          openapi_doc_location: ${{ inputs.openapi_doc_location }}
          github_access_token: ${{ secrets.github_access_token }}
          languages: ${{ inputs.languages }}
          create_release: ${{ inputs.create_release }}
  publish-pypi:
    if: ${{ needs.generate.outputs.python_regenerated == 'true' && inputs.publish_python == 'true' }}
    name: Publish Python SDK
    runs-on: ubuntu-latest
    needs: generate
    defaults:
      run:
        working-directory: ${{ needs.generate.outputs.python_directory }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.generate.outputs.commit_hash }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
  publish-npm:
    if: ${{ needs.generate.outputs.typescript_regenerated == 'true' && inputs.publish_typescript == 'true' }}
    name: Publish Typescript SDK
    runs-on: ubuntu-latest
    needs: generate
    defaults:
      run:
        working-directory: ${{ needs.generate.outputs.typescript_directory }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.generate.outputs.commit_hash }}
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: npm install
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
        run: npm publish --access public
